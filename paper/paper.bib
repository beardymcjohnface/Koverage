@Article{snakemake,
AUTHOR = { Mölder, F and Jablonski, KP and Letcher, B and Hall, MB and Tomkins-Tinch, CH and Sochat, V and Forster, J and Lee, S and Twardziok, SO and Kanitz, A and Wilm, A and Holtgrewe, M and Rahmann, S and Nahnsen, S and Köster, J},
TITLE = {Sustainable data analysis with Snakemake [version 1; peer review: 1 approved, 1 approved with reservations]
},
JOURNAL = {F1000Research},
VOLUME = {10},
YEAR = {2021},
NUMBER = {33},
DOI = {10.12688/f1000research.29032.1},
}
@article{snaketool,
    doi = {10.1371/journal.pcbi.1010705},
    author = {Roach, Michael J. AND Pierce-Ward, N. Tessa AND Suchecki, Radoslaw AND Mallawaarachchi, Vijini AND Papudeshi, Bhavya AND Handley, Scott A. AND Brown, C. Titus AND Watson-Haigh, Nathan S. AND Edwards, Robert A.},
    journal = {PLOS Computational Biology},
    publisher = {Public Library of Science},
    title = {Ten simple rules and a template for creating workflows-as-applications},
    year = {2022},
    month = {12},
    volume = {18},
    url = {https://doi.org/10.1371/journal.pcbi.1010705},
    pages = {1-9},
    abstract = {null},
    number = {12},
}
@article{minimap,
    author = {Li, Heng},
    title = "{Minimap2: pairwise alignment for nucleotide sequences}",
    journal = {Bioinformatics},
    volume = {34},
    number = {18},
    pages = {3094-3100},
    year = {2018},
    month = {05},
    abstract = {null},
    issn = {1367-4803},
    doi = {10.1093/bioinformatics/bty191},
    url = {https://doi.org/10.1093/bioinformatics/bty191},
    eprint = {https://academic.oup.com/bioinformatics/article-pdf/34/18/3094/48919122/bioinformatics\_34\_18\_3094.pdf},
}
@article{jellyfish,
    author = {Marçais, Guillaume and Kingsford, Carl},
    title = "{A fast, lock-free approach for efficient parallel counting of occurrences of k-mers}",
    journal = {Bioinformatics},
    volume = {27},
    number = {6},
    pages = {764-770},
    year = {2011},
    month = {01},
    abstract = "{Motivation: Counting the number of occurrences of every k-mer (substring of length k) in a long string is a central subproblem in many applications, including genome assembly, error correction of sequencing reads, fast multiple sequence alignment and repeat detection. Recently, the deep sequence coverage generated by next-generation sequencing technologies has caused the amount of sequence to be processed during a genome project to grow rapidly, and has rendered current k-mer counting tools too slow and memory intensive. At the same time, large multicore computers have become commonplace in research facilities allowing for a new parallel computational paradigm.Results: We propose a new k-mer counting algorithm and associated implementation, called Jellyfish, which is fast and memory efficient. It is based on a multithreaded, lock-free hash table optimized for counting k-mers up to 31 bases in length. Due to their flexibility, suffix arrays have been the data structure of choice for solving many string problems. For the task of k-mer counting, important in many biological applications, Jellyfish offers a much faster and more memory-efficient solution.Availability: The Jellyfish software is written in C++ and is GPL licensed. It is available for download at http://www.cbcb.umd.edu/software/jellyfish.Contact:  gmarcais@umd.eduSupplementary information:  Supplementary data are available at Bioinformatics online.}",
    issn = {1367-4803},
    doi = {10.1093/bioinformatics/btr011},
    url = {https://doi.org/10.1093/bioinformatics/btr011},
    eprint = {https://academic.oup.com/bioinformatics/article-pdf/27/6/764/48866141/bioinformatics\_27\_6\_764.pdf},
}
@article{samtools,
    author = {Danecek, Petr and Bonfield, James K and Liddle, Jennifer and Marshall, John and Ohan, Valeriu and Pollard, Martin O and Whitwham, Andrew and Keane, Thomas and McCarthy, Shane A and Davies, Robert M and Li, Heng},
    title = "{Twelve years of SAMtools and BCFtools}",
    journal = {GigaScience},
    volume = {10},
    number = {2},
    year = {2021},
    month = {02},
    abstract = "{SAMtools and BCFtools are widely used programs for processing and analysing high-throughput sequencing data. They include tools for file format conversion and manipulation, sorting, querying, statistics, variant calling, and effect analysis amongst other methods.The first version appeared online 12 years ago and has been maintained and further developed ever since, with many new features and improvements added over the years. The SAMtools and BCFtools packages represent a unique collection of tools that have been used in numerous other software projects and countless genomic pipelines.Both SAMtools and BCFtools are freely available on GitHub under the permissive MIT licence, free for both non-commercial and commercial use. Both packages have been installed \\&gt;1 million times via Bioconda. The source code and documentation are available from https://www.htslib.org.}",
    issn = {2047-217X},
    doi = {10.1093/gigascience/giab008},
    url = {https://doi.org/10.1093/gigascience/giab008},
    note = {giab008},
    eprint = {https://academic.oup.com/gigascience/article-pdf/10/2/giab008/36332246/giab008.pdf},
}
@misc{deepthought,
  doi = {10.25957/FLINDERS.HPC.DEEPTHOUGHT},
  url = {https://deepthoughtdocs.flinders.edu.au/en/latest/},
  author = {{Flinders University}},
  keywords = {HPC, High performance computing},
  title = {Deep Thought (HPC)},
  publisher = {Flinders University},
  year = {2021},
}
@misc{setonix,
  doi = {null},
  url = {https://support.pawsey.org.au/documentation/display/US/Setonix+Guides},
  author = {{Pawsey Supercomputing Research Centre}},
  keywords = {HPC, High performance computing},
  title = {Setonix (HPC)},
  publisher = {Pawsey Supercomputing Research Centre},
  year = {2023}
}
@Article{graphbin2,
  author={Mallawaarachchi, Vijini G.
  and Wickramarachchi, Anuradha S.
  and Lin, Yu},
  title={Improving metagenomic binning results with overlapped bins using assembly graphs},
  journal={Algorithms for Molecular Biology},
  year={2021},
  month={May},
  day={04},
  volume={16},
  number={1},
  pages={3},
  abstract={Metagenomic sequencing allows us to study the structure, diversity and ecology in microbial communities without the necessity of obtaining pure cultures. In many metagenomics studies, the reads obtained from metagenomics sequencing are first assembled into longer contigs and these contigs are then binned into clusters of contigs where contigs in a cluster are expected to come from the same species. As different species may share common sequences in their genomes, one assembled contig may belong to multiple species. However, existing tools for binning contigs only support non-overlapped binning, i.e., each contig is assigned to at most one bin (species).},
  issn={1748-7188},
  doi={10.1186/s13015-021-00185-6},
  url={https://doi.org/10.1186/s13015-021-00185-6}
}
@Article{metacoag,
  author = {Mallawaarachchi, Vijini and Lin, Yu},
  title = {Accurate Binning of Metagenomic Contigs Using Composition, Coverage, and Assembly Graphs},
  journal = {Journal of Computational Biology},
  volume = {29},
  number = {12},
  pages = {1357--1376},
  year = {2022},
  doi = {10.1089/cmb.2022.0262},
  note ={PMID: 36367700},
  URL = {https://doi.org/10.1089/cmb.2022.0262},
  eprint = {https://doi.org/10.1089/cmb.2022.0262},
  abstract = { Metagenomics enables the recovery of various genetic materials from different species, thus providing valuable insights into microbial communities. Metagenomic binning group sequences belong to different organisms, which is an important step in the early stages of metagenomic analysis pipelines. The classic pipeline followed in metagenomic binning is to assemble short reads into longer contigs and then bin these resulting contigs into groups representing different taxonomic groups in the metagenomic sample. Most of the currently available binning tools are designed to bin metagenomic contigs, but they do not make use of the assembly graphs that produce such assemblies. In this study, we propose MetaCoAG, a metagenomic binning tool that uses assembly graphs with the composition and coverage information of contigs. MetaCoAG estimates the number of initial bins using single-copy marker genes, assigns contigs into bins iteratively, and adjusts the number of bins dynamically throughout the binning process. We show that MetaCoAG significantly outperforms state-of-the-art binning tools by producing similar or more high-quality bins than the second-best binning tool on both simulated and real datasets. To the best of our knowledge, MetaCoAG is the first stand-alone contig-binning tool that directly makes use of the assembly graph information along with other features of the contigs. }
}
@article {condiga,
	author = {Enhui Wu and Vijini Mallawaarachchi and Jinzhi Zhao and Yi Yang and Hebin Liu and Xiaoqing Wang and Chengpin Shen and Yu Lin and Liang Qiao},
	title = {Contigs directed gene annotation (ConDiGA) for accurate protein sequence database construction in metaproteomics},
	elocation-id = {2023.04.19.537311},
	year = {2023},
	doi = {10.1101/2023.04.19.537311},
	publisher = {Cold Spring Harbor Laboratory},
	abstract = {Microbiota are closely associated to human health and disease. Metaproteomics can provide a direct means to identify microbial proteins in microbiota for compositional and functional characterization. However, in-depth and accurate metaproteomics is still limited due to the extreme complexity and high diversity of microbiota samples. One of the main challenges is constructing a protein sequence database that best fits the microbiota sample. Herein, we proposed an accurate taxonomic annotation pipeline from metagenomic data for deep metaproteomic coverage, namely contigs directed gene annotation (ConDiGA). We mixed 12 known bacterial species to derive a synthetic microbial community to benchmark metagenomic and metaproteomic pipelines. With the optimized taxonomic annotation strategy by ConDiGA, we built a protein sequence database from the metagenomic data for metaproteomic analysis and identified about 12,000 protein groups, which was very close to the result obtained with the reference proteome protein sequence database of the 12 species. We also demonstrated the practicability of the method in real fecal samples, achieved deep proteome coverage of human gut microbiome, and compared the function and taxonomy of gut microbiota at metagenomic level and metaproteomic level. Our study can tackle the current taxonomic annotation reliability problem in metagenomics-derived protein sequence database for metaproteomics. The unique dataset of metagenomic and the metaproteomic data of the 12 bacterial species is publicly available as a standard benchmarking sample for evaluating various analysis pipelines. The code of ConDiGA is open access at GitHub for the analysis of real microbiota samples.Competing Interest StatementThe authors have declared no competing interest.},
	URL = {https://www.biorxiv.org/content/early/2023/04/20/2023.04.19.537311},
	eprint = {https://www.biorxiv.org/content/early/2023/04/20/2023.04.19.537311.full.pdf},
	journal = {bioRxiv}
}
@misc{coverm,
  author={Woodcroft, BJ and Newell, R},
  title={WWOOD/coverm: Read coverage calculator for metagenomics},
  year={2017},
  note= {Accessed: August 11, 2023},
  howpublished = {\url{https://github.com/wwood/CoverM}}
} 